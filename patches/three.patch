diff --git a/build/three.cjs b/build/three.cjs
index 895d91f2c0789e6bc3e791b001df2ef0ea1979de..9c698ea7b04272bc3c538e27bfa727000c838a13 100644
--- a/build/three.cjs
+++ b/build/three.cjs
@@ -19130,11 +19130,10 @@ class WebGLShaderCache {
 
 	update( material ) {
 
-		const vertexShader = material.vertexShader;
-		const fragmentShader = material.fragmentShader;
-
-		const vertexShaderStage = this._getShaderStage( vertexShader );
-		const fragmentShaderStage = this._getShaderStage( fragmentShader );
+		const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+		const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+		const vertexShaderStage = this._getShaderStage(vertexShaderKey, material.vertexShader);
+		const fragmentShaderStage = this._getShaderStage(fragmentShaderKey, material.fragmentShader);
 
 		const materialShaders = this._getShaderCacheForMaterial( material );
 
@@ -19176,13 +19175,15 @@ class WebGLShaderCache {
 
 	getVertexShaderID( material ) {
 
-		return this._getShaderStage( material.vertexShader ).id;
+		const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+		return this._getShaderStage(vertexShaderKey, material.vertexShader).id;
 
 	}
 
 	getFragmentShaderID( material ) {
 
-		return this._getShaderStage( material.fragmentShader ).id;
+		const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+		return this._getShaderStage(fragmentShaderKey, material.fragmentShader).id;
 
 	}
 
diff --git a/build/three.js b/build/three.js
index cc0bbf7bcc207a449d4e35890f79b6e927905639..153d1528ea5f2d81bdc6acf6d0e273d316ab4db1 100644
--- a/build/three.js
+++ b/build/three.js
@@ -19134,11 +19134,10 @@
 
 		update( material ) {
 
-			const vertexShader = material.vertexShader;
-			const fragmentShader = material.fragmentShader;
-
-			const vertexShaderStage = this._getShaderStage( vertexShader );
-			const fragmentShaderStage = this._getShaderStage( fragmentShader );
+			const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+			const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+			const vertexShaderStage = this._getShaderStage(vertexShaderKey, material.vertexShader);
+			const fragmentShaderStage = this._getShaderStage(fragmentShaderKey, material.fragmentShader);
 
 			const materialShaders = this._getShaderCacheForMaterial( material );
 
@@ -19180,13 +19179,15 @@
 
 		getVertexShaderID( material ) {
 
-			return this._getShaderStage( material.vertexShader ).id;
+			const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+			return this._getShaderStage(vertexShaderKey, material.vertexShader).id;
 
 		}
 
 		getFragmentShaderID( material ) {
 
-			return this._getShaderStage( material.fragmentShader ).id;
+			const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+			return this._getShaderStage(fragmentShaderKey, material.fragmentShader).id;
 
 		}
 
diff --git a/build/three.module.js b/build/three.module.js
index b2cf8fed47633d549827f44b8147dc1bf11fc9c6..ec9b4d2db6bebdfc469cbaba6c6c61ba96523421 100644
--- a/build/three.module.js
+++ b/build/three.module.js
@@ -19126,32 +19126,21 @@ class WebGLShaderCache {
 
 	}
 
-	update( material ) {
-
-		const vertexShader = material.vertexShader;
-		const fragmentShader = material.fragmentShader;
-
-		const vertexShaderStage = this._getShaderStage( vertexShader );
-		const fragmentShaderStage = this._getShaderStage( fragmentShader );
-
-		const materialShaders = this._getShaderCacheForMaterial( material );
-
-		if ( materialShaders.has( vertexShaderStage ) === false ) {
-
-			materialShaders.add( vertexShaderStage );
-			vertexShaderStage.usedTimes ++;
-
+	update(material) {
+		const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+		const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+		const vertexShaderStage = this._getShaderStage(vertexShaderKey, material.vertexShader);
+		const fragmentShaderStage = this._getShaderStage(fragmentShaderKey, material.fragmentShader);
+		const materialShaders = this._getShaderCacheForMaterial(material);
+		if (materialShaders.has(vertexShaderStage) === false) {
+			materialShaders.add(vertexShaderStage);
+			vertexShaderStage.usedTimes++;
 		}
-
-		if ( materialShaders.has( fragmentShaderStage ) === false ) {
-
-			materialShaders.add( fragmentShaderStage );
-			fragmentShaderStage.usedTimes ++;
-
+		if (materialShaders.has(fragmentShaderStage) === false) {
+			materialShaders.add(fragmentShaderStage);
+			fragmentShaderStage.usedTimes++;
 		}
-
 		return this;
-
 	}
 
 	remove( material ) {
@@ -19172,16 +19161,13 @@ class WebGLShaderCache {
 
 	}
 
-	getVertexShaderID( material ) {
-
-		return this._getShaderStage( material.vertexShader ).id;
-
+	getVertexShaderID(material) {
+		const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+		return this._getShaderStage(vertexShaderKey, material.vertexShader).id;
 	}
-
-	getFragmentShaderID( material ) {
-
-		return this._getShaderStage( material.fragmentShader ).id;
-
+	getFragmentShaderID(material) {
+		const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+		return this._getShaderStage(fragmentShaderKey, material.fragmentShader).id;
 	}
 
 	dispose() {
diff --git a/src/renderers/webgl/WebGLShaderCache.js b/src/renderers/webgl/WebGLShaderCache.js
index 4e0fffcbb035c5229f3eb9672ba3b129db78df89..5292dcb4fdd1dc349d2579da6d398c11223ff2a3 100644
--- a/src/renderers/webgl/WebGLShaderCache.js
+++ b/src/renderers/webgl/WebGLShaderCache.js
@@ -9,32 +9,21 @@ class WebGLShaderCache {
 
 	}
 
-	update( material ) {
-
-		const vertexShader = material.vertexShader;
-		const fragmentShader = material.fragmentShader;
-
-		const vertexShaderStage = this._getShaderStage( vertexShader );
-		const fragmentShaderStage = this._getShaderStage( fragmentShader );
-
-		const materialShaders = this._getShaderCacheForMaterial( material );
-
-		if ( materialShaders.has( vertexShaderStage ) === false ) {
-
-			materialShaders.add( vertexShaderStage );
-			vertexShaderStage.usedTimes ++;
-
+	update(material) {
+		const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+		const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+		const vertexShaderStage = this._getShaderStage(vertexShaderKey, material.vertexShader);
+		const fragmentShaderStage = this._getShaderStage(fragmentShaderKey, material.fragmentShader);
+		const materialShaders = this._getShaderCacheForMaterial(material);
+		if (materialShaders.has(vertexShaderStage) === false) {
+			materialShaders.add(vertexShaderStage);
+			vertexShaderStage.usedTimes++;
 		}
-
-		if ( materialShaders.has( fragmentShaderStage ) === false ) {
-
-			materialShaders.add( fragmentShaderStage );
-			fragmentShaderStage.usedTimes ++;
-
+		if (materialShaders.has(fragmentShaderStage) === false) {
+			materialShaders.add(fragmentShaderStage);
+			fragmentShaderStage.usedTimes++;
 		}
-
 		return this;
-
 	}
 
 	remove( material ) {
@@ -55,16 +44,13 @@ class WebGLShaderCache {
 
 	}
 
-	getVertexShaderID( material ) {
-
-		return this._getShaderStage( material.vertexShader ).id;
-
+	getVertexShaderID(material) {
+		const vertexShaderKey = material.vertexShaderKey != undefined ? material.vertexShaderKey : material.vertexShader;
+		return this._getShaderStage(vertexShaderKey, material.vertexShader).id;
 	}
-
-	getFragmentShaderID( material ) {
-
-		return this._getShaderStage( material.fragmentShader ).id;
-
+	getFragmentShaderID(material) {
+		const fragmentShaderKey = material.fragmentShaderKey != undefined ? material.fragmentShaderKey : material.fragmentShader;
+		return this._getShaderStage(fragmentShaderKey, material.fragmentShader).id;
 	}
 
 	dispose() {
